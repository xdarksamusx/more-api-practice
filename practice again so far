import React, { useState, useEffect } from "react";

import { Link } from "react-router-dom";
import styled, { css, createGlobalStyle } from "styled-components";

import axios from "axios";

// const cities = ["london", "paris"]; // make this list dynamic, aka hate it as state in app

const GlobalStyles = createGlobalStyle`

 h3 {
   margin: 0;
   padding: 0;
 }

svg {
  display: inline-block;
  position: absolute;
  z-index: 999;
   height: 10px;
  width: 10px;
  top: 7px;
  left: 8px;


}
`;

const Form = styled.form`
  margin: 50px auto;
  position: relative;
`;

const Input = styled.input`
  background: #dbdbe0;
  width: 240px;
  height: 20px;
  padding-left: 20px;

  border-radius: 7px;
  border: none;
`;

const InputContainer = styled.div`
  position: relative;
  border: black 1 px solid;
`;

const ListItem = styled.li`
  display: flex;
  align-items: center;
  gap: 5px;
`;

const Navigation = (props) => {
  const [inputValue, setInputValue] = useState("");

  const [cities, setCities] = useState([]);
  const [isLoading, setIsLoading] = useState(false);

  const [city, setCity] = useState("");

  const [countryCode, setCountryCode] = useState("");

  const getCityData = async (city) => {
    try {
      setIsLoading(true);
      const { data } = await axios(
        `https://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=22&appid=8fb9b229cd6e177ca761ee2c0dc897bd`
      );
      // setHomeCity()
      setIsLoading(false);

      const dataObject = data[0];
      const { country: countryCode, lat, lon } = dataObject;
      setCountryCode(countryCode);
      return { countryCode, lat, lon };
      // console.log(data)
    } catch (err) {
      setError(true);
      console.log(err.message);
    }
  };

  const handleChange = (value) => {
    setInputValue(value);
  };

  const handleSubmit = async (event) => {
    event.preventDefault();
    setIsLoading(true);

    try {
      const newCity = { cityName: inputValue };
      // console.log(newCity);
      const cityData = await getCityData(newCity.cityName);
      const newCityCopy = { ...newCity, countryCode: cityData.countryCode };

      console.log("mmeee", newCityCopy);
      setCity(newCityCopy);
      //call api , enter city and retrieve country code
      //const newPropety = some URL for image
      /// newCityObject = {...newCity,  newProperty }

      const updatedCities = [...cities, newCityCopy];
      setInputValue("");

      setCities(updatedCities);
      console.log("cities", cities);
    } catch (err) {}

    setIsLoading(true);
  };

  // useEffect(() => {
  //   console.log("I get an empty array here",cities);
  // }, [cities]);

  return (
    <>
      <GlobalStyles />
      <Form onSubmit={handleSubmit}>
        <InputContainer>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            x="0px"
            y="0px"
            width="100"
            height="100"
            viewBox="0 0 50 50"
          >
            <path d="M 21 3 C 11.621094 3 4 10.621094 4 20 C 4 29.378906 11.621094 37 21 37 C 24.710938 37 28.140625 35.804688 30.9375 33.78125 L 44.09375 46.90625 L 46.90625 44.09375 L 33.90625 31.0625 C 36.460938 28.085938 38 24.222656 38 20 C 38 10.621094 30.378906 3 21 3 Z M 21 5 C 29.296875 5 36 11.703125 36 20 C 36 28.296875 29.296875 35 21 35 C 12.703125 35 6 28.296875 6 20 C 6 11.703125 12.703125 5 21 5 Z"></path>
          </svg>

          <Input
            type="text"
            placeholder=" Search for Location..."
            onChange={(e) => handleChange(e.target.value)}
            value={inputValue}
          />
        </InputContainer>
      </Form>
      <nav>
        <ul>
          <li>
            <Link to="/">Home</Link>
          </li>
          {cities.map((city, index) => (
            <ListItem key={city}>
              {/* <img src={`https://flagsapi.com/${city}/flat/64.png`} /> */}

              <Link to={`/city/${city}`}>{city.cityName}</Link>
            </ListItem>
          ))}
        </ul>
      </nav>
    </>
  );
};

export default Navigation;
